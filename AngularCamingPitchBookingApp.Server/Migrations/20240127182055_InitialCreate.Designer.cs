// <auto-generated />
using System;
using AngularCamingPitchBookingApp.Server.Infrastruture;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AngularCamingPitchBookingApp.Server.Migrations
{
    [DbContext(typeof(CatalogContext))]
    [Migration("20240127182055_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("AngularCamingPitchBookingApp.Server.Entities.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CampingPitchId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("End")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Start")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CampingPitchId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("AngularCamingPitchBookingApp.Server.Entities.CampingPitch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Label")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LocalisationId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PriceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("LocalisationId");

                    b.HasIndex("PriceId");

                    b.ToTable("CampingPitches");
                });

            modelBuilder.Entity("AngularCamingPitchBookingApp.Server.Entities.Localisation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("TEXT");

                    b.Property<string>("ZipCode")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Localisations");
                });

            modelBuilder.Entity("AngularCamingPitchBookingApp.Server.Entities.Price", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TTC")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("AngularCamingPitchBookingApp.Server.Entities.Booking", b =>
                {
                    b.HasOne("AngularCamingPitchBookingApp.Server.Entities.CampingPitch", null)
                        .WithMany("Bookings")
                        .HasForeignKey("CampingPitchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AngularCamingPitchBookingApp.Server.Entities.CampingPitch", b =>
                {
                    b.HasOne("AngularCamingPitchBookingApp.Server.Entities.Localisation", "Localisation")
                        .WithMany()
                        .HasForeignKey("LocalisationId");

                    b.HasOne("AngularCamingPitchBookingApp.Server.Entities.Price", "Price")
                        .WithMany()
                        .HasForeignKey("PriceId");

                    b.Navigation("Localisation");

                    b.Navigation("Price");
                });

            modelBuilder.Entity("AngularCamingPitchBookingApp.Server.Entities.CampingPitch", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
